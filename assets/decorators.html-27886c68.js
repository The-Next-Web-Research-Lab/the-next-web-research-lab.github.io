import{_ as t,r as o,o as c,c as r,a as s,b as n,d as e,e as p}from"./app-b67068d0.js";const l={},i=s("h1",{id:"javascript-decorators-proposal과-실용성",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#javascript-decorators-proposal과-실용성","aria-hidden":"true"},"#"),n(" JavaScript - Decorators Proposal과 실용성")],-1),d=s("h2",{id:"decorators-proposal",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#decorators-proposal","aria-hidden":"true"},"#"),n(" Decorators Proposal")],-1),u={href:"https://github.com/tc39/proposal-decorators",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/erights/Orthogonal-Classes",target:"_blank",rel:"noopener noreferrer"},h={href:"https://onedrive.live.com/view.aspx?resid=A7BBCE1FC8EE16DB!442046&app=PowerPoint&authkey=!AEeXmhZASk50KjA",target:"_blank",rel:"noopener noreferrer"},v={href:"https://tc39.github.io/proposal-class-fields/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/tc39/proposal-private-methods",target:"_blank",rel:"noopener noreferrer"},b=s("li",null,"Decorators는 이미 정의된 클래스, 함수, 변수의 코드를 수정하지 않고, 기능을 추가하는 것에 유용함",-1),_=s("li",null,"메모이제이션, 접근 제어, 인증, 계측, 타이밍 처리, 로깅, 속도 제한 등에 사용된다.",-1),f=s("h2",{id:"decorators-실용성",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#decorators-실용성","aria-hidden":"true"},"#"),n(" Decorators 실용성")],-1),g={href:"https://www.typescriptlang.org/docs/handbook/decorators.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.nestjs.com/controllers",target:"_blank",rel:"noopener noreferrer"},x={href:"https://angular.kr/guide/what-is-angular",target:"_blank",rel:"noopener noreferrer"},y=p(`<h3 id="코드-사용-예시" tabindex="-1"><a class="header-anchor" href="#코드-사용-예시" aria-hidden="true">#</a> 코드 사용 예시</h3><ul><li><code>@defineElement</code>: 커스텀 엘레멘트를 생성하는 기능</li><li><code>@bound</code>: 디바운스 처리 기능</li><li><code>@observed</code>: 필드를 감시하며 변경 시 자동으로 <code>render()</code>를 호출하는 기능</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@<span class="token function">defineElement</span><span class="token punctuation">(</span><span class="token string">&#39;num-counter&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>
  @observed #x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  @bound
  <span class="token function">#clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#x<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#clicked<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">connectedCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  @bound
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function E(C,j){const a=o("ExternalLinkIcon");return c(),r("div",null,[i,d,s("ul",null,[s("li",null,[s("a",u,[n("tc39/proposal-decorators"),e(a)]),n("에 제안서 정의됨")]),s("li",null,[s("a",k,[n("Orthogonal Classes"),e(a)]),n("와 "),s("a",h,[n("Class Evaluation Order"),e(a)]),n(" 제안을 바탕으로 Decorators와 "),s("a",v,[n("Class Field"),e(a)]),n(" 및 "),s("a",m,[n("Private methods"),e(a)]),n("를 함께 작동시키는 방법에 대한 결합된 비전을 제안")]),b,_]),f,s("p",null,[n("JavaScript에서는 Decorators를 사용할 수 없지만 "),s("a",g,[n("TypeScript에서 Decorators"),e(a)]),n("를 사용할 수 있다. 그래서 Node.js Framework "),s("a",w,[n("nestjs"),e(a)]),n("와 Front-end Framework "),s("a",x,[n("Angular"),e(a)]),n("에서는 공식적으로 사용 중이다.")]),y])}const B=t(l,[["render",E],["__file","decorators.html.vue"]]);export{B as default};
