const t=JSON.parse(`{"key":"v-3cb0a0bf","path":"/en/fe-dev/refactoring/refactoring-meaning-and-result.html","title":"Definition and Results of Refactoring","lang":"en-US","frontmatter":{"title":"Definition and Results of Refactoring","description":"Definition and Results of Refactoring This post is a summary of part of Martin Fowler's Refactoring book written on May 26, 2019. Refactoring Refactoring is the process of modifying the internal of the software to make it easier to understand and modify, while leaving the functionality that appears on the surface intact. It makes the software easier to understand and modify, and allows you to add various functions to the software without affecting the functionality that appears on the surface. Users do not notice the changes in the software because refactoring does not affect the functionality that appears on the surface after performing it.","head":[["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://the-next-web-research-lab.github.io/fe-dev/refactoring/refactoring-meaning-and-result.html"}],["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/en/fe-dev/refactoring/refactoring-meaning-and-result.html"}],["meta",{"property":"og:site_name","content":"TheNextWebResearchLab"}],["meta",{"property":"og:title","content":"Definition and Results of Refactoring"}],["meta",{"property":"og:description","content":"Definition and Results of Refactoring This post is a summary of part of Martin Fowler's Refactoring book written on May 26, 2019. Refactoring Refactoring is the process of modifying the internal of the software to make it easier to understand and modify, while leaving the functionality that appears on the surface intact. It makes the software easier to understand and modify, and allows you to add various functions to the software without affecting the functionality that appears on the surface. Users do not notice the changes in the software because refactoring does not affect the functionality that appears on the surface after performing it."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-01-18T10:31:50.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Definition and Results of Refactoring"}],["meta",{"property":"article:modified_time","content":"2024-01-18T10:31:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Definition and Results of Refactoring\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2024-01-18T10:31:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"Refactoring","slug":"refactoring","link":"#refactoring","children":[]},{"level":3,"title":"Refactoring Results","slug":"refactoring-results","link":"#refactoring-results","children":[]}],"git":{"createdTime":1705573910000,"updatedTime":1705573910000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":1}]},"readingTime":{"minutes":1.33,"words":398},"filePathRelative":"en/fe-dev/refactoring/refactoring-meaning-and-result.md","localizedDate":"January 18, 2024","excerpt":"<h1> Definition and Results of Refactoring</h1>\\n<blockquote>\\n<p>This post is a summary of part of Martin Fowler's Refactoring book written on May 26, 2019.</p>\\n</blockquote>\\n<h3> Refactoring</h3>\\n<p><strong>Refactoring</strong> is the process of modifying the internal of the software to make it easier to understand and modify, while leaving the functionality that appears on the surface intact. It makes the software easier to understand and modify, and allows you to add various functions to the software without affecting the functionality that appears on the surface. Users do not notice the changes in the software because refactoring does not affect the functionality that appears on the surface after performing it.</p>","autoDesc":true}`);export{t as data};
