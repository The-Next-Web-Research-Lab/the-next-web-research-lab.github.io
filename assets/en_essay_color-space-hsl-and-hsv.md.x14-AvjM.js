import{_ as e,c as a,o as t,a3 as r}from"./chunks/framework.9Buaa5aL.js";const b=JSON.parse('{"title":"HSL HSV","description":"","frontmatter":{"title":"HSL HSV"},"headers":[],"relativePath":"en/essay/color-space-hsl-and-hsv.md","filePath":"en/essay/color-space-hsl-and-hsv.md"}'),s={name:"en/essay/color-space-hsl-and-hsv.md"},o=r('<h1 id="color-space-series-hsl-hsv" tabindex="-1">Color Space Series - HSL HSV <a class="header-anchor" href="#color-space-series-hsl-hsv" aria-label="Permalink to &quot;Color Space Series - HSL HSV&quot;">​</a></h1><h2 id="hsl" tabindex="-1">HSL <a class="header-anchor" href="#hsl" aria-label="Permalink to &quot;HSL&quot;">​</a></h2><blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl</a></p></blockquote><h3 id="hue" tabindex="-1">Hue <a class="header-anchor" href="#hue" aria-label="Permalink to &quot;Hue&quot;">​</a></h3><p>Hue is the angle that represents the type of color, and hue indicates the basic colors such as red, yellow, green, blue, navy, and purple. It can have values from 0 degrees to 360 degrees. For example, red is 0 degrees, yellow is 60 degrees, green is 120 degrees, blue is 240 degrees, etc.</p><h3 id="saturation" tabindex="-1">Saturation <a class="header-anchor" href="#saturation" aria-label="Permalink to &quot;Saturation&quot;">​</a></h3><p>Saturation is the purity of the color. Saturation values range from 0% to 100%. When the color is 100%, it has the maximum purity, and when the color is 0%, it is expressed as gray.</p><h3 id="lightness" tabindex="-1">Lightness <a class="header-anchor" href="#lightness" aria-label="Permalink to &quot;Lightness&quot;">​</a></h3><p>Lightness is the brightness of the color. Lightness values range from 0% to 100%. When the color is 0%, it is expressed as pure black, and when the color is 100%, it is expressed as pure white.</p><h2 id="hsv" tabindex="-1">HSV <a class="header-anchor" href="#hsv" aria-label="Permalink to &quot;HSV&quot;">​</a></h2><h3 id="hue-1" tabindex="-1">Hue <a class="header-anchor" href="#hue-1" aria-label="Permalink to &quot;Hue&quot;">​</a></h3><p>The angle value that represents the type of color. It is based on a 360-degree color wheel, and it can have values from 0 degrees to 360 degrees. For example, red is 0 degrees, yellow is 60 degrees, green is 120 degrees, blue is 240 degrees, etc.</p><h3 id="saturation-1" tabindex="-1">Saturation <a class="header-anchor" href="#saturation-1" aria-label="Permalink to &quot;Saturation&quot;">​</a></h3><p>The value that represents the purity of the color. 0% is gray, 100% is maximum purity. The higher the purity, the darker the color.</p><h3 id="value" tabindex="-1">Value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;Value&quot;">​</a></h3><p>The value that represents the brightness of the color. 0% is pure black, 100% is pure white. Value values are used to adjust the brightness of a specific color or create a blurry color.</p><h2 id="hsl-vs-hsv-color-model" tabindex="-1">HSL vs HSV Color Model <a class="header-anchor" href="#hsl-vs-hsv-color-model" aria-label="Permalink to &quot;HSL vs HSV Color Model&quot;">​</a></h2><p>HSL (Hue, Saturation, Lightness) and HSV (Hue, Saturation, Value) are color models used in computer graphics and digital image processing.</p><p>The difference between the two models is the way they express the relationship between hue, saturation, and the third component (lightness or value).</p><p>In HSL, hue is the angle on the color wheel, saturation is the distance from the center, and lightness is the brightness of the color (0 = black, 1 = white).</p><p>In HSV, hue is the angle on the color wheel, saturation is the purity of the color, and value is the brightness of the color (0 = black, 1 = maximum brightness).</p><p>Ultimately, the difference between HSL and HSV is the way they express the relationship between the hue, saturation, and brightness of the color. However, both are used for similar purposes.</p>',22),h=[o];function l(i,n,c,u,d,p){return t(),a("div",null,h)}const m=e(s,[["render",l]]);export{b as __pageData,m as default};
