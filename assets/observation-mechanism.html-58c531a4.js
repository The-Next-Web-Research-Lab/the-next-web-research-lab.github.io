const e=JSON.parse(`{"key":"v-160a7cc0","path":"/en/essay/observation-mechanism.html","title":"Observer mechanism","lang":"en-US","frontmatter":{"title":"Observer mechanism","description":"Observer mechanism This post was organized on May 20, 2019. Purpose of the article This post is written for the purpose of organizing data rather than delivering information, so it is not well organized. I remember finding a solution to performance issues day and night in a project using AngularJs. Because of that experience, I sometimes look at how the observer mechanisms of libraries are implemented. Personally, I think VueJs's observer mechanism is the most ideal. This is a material that summarizes the observer mechanisms implemented by each library.","head":[["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://the-next-web-research-lab.github.io/essay/observation-mechanism.html"}],["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/en/essay/observation-mechanism.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"Observer mechanism"}],["meta",{"property":"og:description","content":"Observer mechanism This post was organized on May 20, 2019. Purpose of the article This post is written for the purpose of organizing data rather than delivering information, so it is not well organized. I remember finding a solution to performance issues day and night in a project using AngularJs. Because of that experience, I sometimes look at how the observer mechanisms of libraries are implemented. Personally, I think VueJs's observer mechanism is the most ideal. This is a material that summarizes the observer mechanisms implemented by each library."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-01-18T07:15:00.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Observer mechanism"}],["meta",{"property":"article:modified_time","content":"2024-01-18T07:15:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Observer mechanism\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2024-01-18T07:15:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"Purpose of the article","slug":"purpose-of-the-article","link":"#purpose-of-the-article","children":[]},{"level":3,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[]},{"level":3,"title":"Observer mechanism by library","slug":"observer-mechanism-by-library","link":"#observer-mechanism-by-library","children":[]},{"level":3,"title":"End","slug":"end","link":"#end","children":[]}],"git":{"createdTime":1705562100000,"updatedTime":1705562100000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":1}]},"readingTime":{"minutes":1.45,"words":436},"filePathRelative":"en/essay/observation-mechanism.md","localizedDate":"January 18, 2024","excerpt":"<h1> Observer mechanism</h1>\\n<blockquote>\\n<p>This post was organized on May 20, 2019.</p>\\n</blockquote>\\n<h3> Purpose of the article</h3>\\n<blockquote>\\n<p>This post is written for the purpose of organizing data rather than delivering information, so it is not well organized.</p>\\n</blockquote>\\n<p>I remember finding a solution to performance issues day and night in a project using AngularJs. Because of that experience, I sometimes look at how the observer mechanisms of libraries are implemented. Personally, I think VueJs's observer mechanism is the most ideal. This is a material that summarizes the observer mechanisms implemented by each library.</p>","autoDesc":true}`);export{e as data};
