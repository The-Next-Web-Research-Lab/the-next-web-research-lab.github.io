import{_ as e,c as a,o as t,a3 as i}from"./chunks/framework.COm4hYgr.js";const f=JSON.parse('{"title":"Technical Leader","description":"","frontmatter":{"title":"Technical Leader"},"headers":[],"relativePath":"en/fe-dev/books/12.md","filePath":"en/fe-dev/books/12.md"}'),o={name:"en/fe-dev/books/12.md"},n=i(`<h1 id="book-review-series-technical-leader" tabindex="-1">Book Review Series - Technical Leader <a class="header-anchor" href="#book-review-series-technical-leader" aria-label="Permalink to &quot;Book Review Series - Technical Leader&quot;">​</a></h1><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p>Gerald M. Weinberg. 『Technical Leader』. Seungbin Cho (trans.). Insight, 2013.</p><h2 id="one-line-review" tabindex="-1">One-line review <a class="header-anchor" href="#one-line-review" aria-label="Permalink to &quot;One-line review&quot;">​</a></h2><p>A book that technical leaders should read for their colleagues</p><h2 id="what-technical-leaders-do" tabindex="-1">What technical leaders do <a class="header-anchor" href="#what-technical-leaders-do" aria-label="Permalink to &quot;What technical leaders do&quot;">​</a></h2><p>I have observed many leaders who try to create an environment where people can exercise their problem-solving skills.</p><p>Some of these leaders were good at motivating, but some had trouble making dogs chase cats. Some had excellent organizational skills, but on the other hand, some could not match two pairs of socks properly in the morning. The most successful technical leaders all enabled people to perform through innovation, that is, doing something in a better way.</p><p>Looking more closely at how technical leaders emphasize innovation, we can see that they are especially working on the following three things.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- Understanding the problem</span></span>
<span class="line"><span>- Managing the flow of ideas</span></span>
<span class="line"><span>- Maintaining quality</span></span></code></pre></div><p>These three are the characteristic components of problem-solving leadership and this is what makes a great technical leader.</p><h3 id="understanding-the-problem" tabindex="-1">Understanding the problem <a class="header-anchor" href="#understanding-the-problem" aria-label="Permalink to &quot;Understanding the problem&quot;">​</a></h3><ul><li>They read the specifications very carefully.</li><li>They encourage their team members to read the specifications very carefully.</li><li>They resolve disputes by referring back to the original problem.</li><li>They ask the customer for explanations and additional information about the specifications.</li><li>They refer back to the specifications when the meaning of the requirements becomes clearer after some work has been done.</li></ul><h3 id="managing-the-flow-of-ideas" tabindex="-1">Managing the flow of ideas <a class="header-anchor" href="#managing-the-flow-of-ideas" aria-label="Permalink to &quot;Managing the flow of ideas&quot;">​</a></h3><ul><li>They provide good ideas to the team.</li><li>They encourage imitation of useful ideas.</li><li>They develop their team members&#39; ideas.</li><li>They give up someone&#39;s idea for the sake of the idea that the team is pursuing. However, no idea should be given up until everyone understands it.</li><li>They do not succumb to time pressure and take time to listen to other people&#39;s ideas.</li><li>They test other people&#39;s ideas.</li><li>They do not immediately criticize their team members&#39; ideas to maintain the flow of ideas.</li><li>When they criticize an idea, they make it clear that they are criticizing the idea itself, not the person who presented it.</li><li>They test their own ideas before presenting them to the team.</li><li>When time and manpower run out, they stop new ideas and move on to implementation.</li><li>They encourage team members to abandon ideas that were successful in the past but do not fit the new situation.</li><li>They reuse abandoned ideas if they have value for solving other problems later.</li></ul><h3 id="quality-control" tabindex="-1">Quality control <a class="header-anchor" href="#quality-control" aria-label="Permalink to &quot;Quality control&quot;">​</a></h3><ul><li>They measure quality as they progress the project.</li><li>They design tools and processes to measure quality to create solutions.</li><li>They measure the implementation speed and compare it with the schedule to prepare for changes in the solution.</li><li>They step back from the project and look at and evaluate the feasibility from a new perspective.</li><li>They review the idea with the customer before implementing it.</li><li>They do not lose motivation even when the idea fails.</li></ul>`,17),l=[n];function s(r,h,d,c,p,m){return t(),a("div",null,l)}const b=e(o,[["render",s]]);export{f as __pageData,b as default};
