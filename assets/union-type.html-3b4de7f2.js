const e=JSON.parse(`{"key":"v-64a6694c","path":"/en/fe-dev/javascript/union-type.html","title":"TypeScript - Union Type Definition and Usage","lang":"en-US","frontmatter":{"title":"TypeScript - Union Type Definition and Usage","description":"TypeScript - Union Type Definition and Usage What is Union Type? A Union Type is a combination of two or more types. For example, if there are multiple data types, interface Square { kind: 'square' size: number } interface Rectangle { kind: 'rectangle' width: number height: number } interface Circle { kind: 'circle' radius: number }","head":[["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://the-next-web-research-lab.github.io/fe-dev/javascript/union-type.html"}],["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/en/fe-dev/javascript/union-type.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"TypeScript - Union Type Definition and Usage"}],["meta",{"property":"og:description","content":"TypeScript - Union Type Definition and Usage What is Union Type? A Union Type is a combination of two or more types. For example, if there are multiple data types, interface Square { kind: 'square' size: number } interface Rectangle { kind: 'rectangle' width: number height: number } interface Circle { kind: 'circle' radius: number }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-01-22T15:09:12.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"TypeScript - Union Type Definition and Usage"}],["meta",{"property":"article:modified_time","content":"2024-01-22T15:09:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript - Union Type Definition and Usage\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2024-01-22T15:09:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"What is Union Type?","slug":"what-is-union-type","link":"#what-is-union-type","children":[{"level":3,"title":"Type Inference for Union Types","slug":"type-inference-for-union-types","link":"#type-inference-for-union-types","children":[]}]}],"git":{"createdTime":1705936152000,"updatedTime":1705936152000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":1}]},"readingTime":{"minutes":0.48,"words":143},"filePathRelative":"en/fe-dev/javascript/union-type.md","localizedDate":"January 23, 2024","excerpt":"<h1> TypeScript - Union Type Definition and Usage</h1>\\n<h2> What is Union Type?</h2>\\n<p>A Union Type is a combination of two or more types.</p>\\n<p>For example, if there are multiple data types,</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Square</span> <span class=\\"token punctuation\\">{</span>\\n  kind<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'square'</span>\\n  size<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Rectangle</span> <span class=\\"token punctuation\\">{</span>\\n  kind<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'rectangle'</span>\\n  width<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n  height<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Circle</span> <span class=\\"token punctuation\\">{</span>\\n  kind<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'circle'</span>\\n  radius<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
