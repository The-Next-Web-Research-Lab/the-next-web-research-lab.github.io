import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as i,e as a}from"./app-b74e304f.js";const n={},r=a('<h1 id="comparison-of-tdd-and-bdd" tabindex="-1"><a class="header-anchor" href="#comparison-of-tdd-and-bdd" aria-hidden="true">#</a> Comparison of TDD and BDD</h1><h2 id="tdd-test-driven-development" tabindex="-1"><a class="header-anchor" href="#tdd-test-driven-development" aria-hidden="true">#</a> TDD (Test Driven Development)</h2><p>TDD is one of the development methodologies that repeats the process of writing test code that fails first, writing development code, running tests, passing, and refactoring. This is a development methodology that focuses on writing only the essential code and increasing the reliability of the code by repeating these tasks.</p><h2 id="bdd-behavior-driven-development" tabindex="-1"><a class="header-anchor" href="#bdd-behavior-driven-development" aria-hidden="true">#</a> BDD (Behavior Driven Development)</h2><p>First of all, the disadvantage of TDD is that unnecessary test code modifications occur when modifying the code by writing tests from the code perspective.</p><p>To solve this situation, BDD methodology came out, and in BDD, the suite is written from the <em>user scenario</em> perspective.</p><p>It is written in units of functions from the user&#39;s perspective, and it is written in units of behavior so that the test code does not change when the development code changes.</p><p>The basic order of writing test code is as follows.</p><h4 id="_1-feature" tabindex="-1"><a class="header-anchor" href="#_1-feature" aria-hidden="true">#</a> 1. Feature</h4><ul><li>Specify the function/responsibility of the test subject.</li><li>Write user stories.</li></ul><h4 id="_2-scenario" tabindex="-1"><a class="header-anchor" href="#_2-scenario" aria-hidden="true">#</a> 2. Scenario</h4><ul><li>Describe the situation for the test purpose.</li><li>Write use cases.</li></ul><h4 id="_3-given" tabindex="-1"><a class="header-anchor" href="#_3-given" aria-hidden="true">#</a> 3. Given</h4><ul><li>Set the value required for the scenario progress.</li></ul><h4 id="_4-when" tabindex="-1"><a class="header-anchor" href="#_4-when" aria-hidden="true">#</a> 4. When</h4><ul><li>Specify the conditions required to proceed with the scenario.</li></ul><h4 id="_5-then" tabindex="-1"><a class="header-anchor" href="#_5-then" aria-hidden="true">#</a> 5. Then</h4><ul><li>Specify the result that must be guaranteed when the scenario is completed.</li></ul>',18),o=[r];function s(d,h){return t(),i("div",null,o)}const u=e(n,[["render",s],["__file","tdd-bdd.html.vue"]]);export{u as default};
