const e=JSON.parse('{"key":"v-3bcfd100","path":"/fe-dev/javascript/concurrency-and-parallelism.html","title":"동시성과 병렬성 한 장에 정리","lang":"ko-KR","frontmatter":{"title":"동시성과 병렬성 한 장에 정리","description":"동시성과 병렬성 한 장에 정리 동시성 동시성은 동시에 얼마나 다양한 일들을 컨트롤할 수 있는지! 예를 들어 웹 브라우저에서 동영상을 재생하고 있을 때, 플레이 리스트 스크롤이나 댓글 작성 등 다양한 일을 함께 할 수 있는 것이 동시성 구현이다. 웹 브라우저는 메인 스레드 하나로 동작한다. 때문에 버벅임 현상 최소화를 위해 Idle Time[1]을 확보하고, Long Task[2]를 최소화해야 한다. 용어 정의 [1] Idle Time: 메인 쓰레드의 작업이 없는 50ms 시간. 사용자 인터렉션이 발생할 수 있는 시간. [2] Long Task: 50ms 이상 메인 쓰레드의 실행 시간","head":[["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/fe-dev/javascript/concurrency-and-parallelism.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"동시성과 병렬성 한 장에 정리"}],["meta",{"property":"og:description","content":"동시성과 병렬성 한 장에 정리 동시성 동시성은 동시에 얼마나 다양한 일들을 컨트롤할 수 있는지! 예를 들어 웹 브라우저에서 동영상을 재생하고 있을 때, 플레이 리스트 스크롤이나 댓글 작성 등 다양한 일을 함께 할 수 있는 것이 동시성 구현이다. 웹 브라우저는 메인 스레드 하나로 동작한다. 때문에 버벅임 현상 최소화를 위해 Idle Time[1]을 확보하고, Long Task[2]를 최소화해야 한다. 용어 정의 [1] Idle Time: 메인 쓰레드의 작업이 없는 50ms 시간. 사용자 인터렉션이 발생할 수 있는 시간. [2] Long Task: 50ms 이상 메인 쓰레드의 실행 시간"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-07-21T13:55:04.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"동시성과 병렬성 한 장에 정리"}],["meta",{"property":"article:modified_time","content":"2023-07-21T13:55:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"동시성과 병렬성 한 장에 정리\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2023-07-21T13:55:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"동시성","slug":"동시성","link":"#동시성","children":[]},{"level":2,"title":"병렬성","slug":"병렬성","link":"#병렬성","children":[]}],"git":{"createdTime":1689947704000,"updatedTime":1689947704000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":1}]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"fe-dev/javascript/concurrency-and-parallelism.md","localizedDate":"2023년 7월 21일","excerpt":"<h1> 동시성과 병렬성 한 장에 정리</h1>\\n<h2> 동시성</h2>\\n<p>동시성은 동시에 얼마나 <strong>다양한 일</strong>들을 컨트롤할 수 있는지!</p>\\n<p>예를 들어 웹 브라우저에서 동영상을 재생하고 있을 때,\\n플레이 리스트 스크롤이나 댓글 작성 등 다양한 일을 함께 할 수 있는 것이 동시성 구현이다.</p>\\n<p>웹 브라우저는 메인 스레드 하나로 동작한다. 때문에 버벅임 현상 최소화를 위해 Idle Time[1]을 확보하고, Long Task[2]를 최소화해야 한다.</p>\\n<h4> 용어 정의</h4>\\n<ul>\\n<li>[1] Idle Time: 메인 쓰레드의 작업이 없는 50ms 시간. 사용자 인터렉션이 발생할 수 있는 시간.</li>\\n<li>[2] Long Task: 50ms 이상 메인 쓰레드의 실행 시간</li>\\n</ul>","autoDesc":true}');export{e as data};
