import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.COm4hYgr.js";const o=JSON.parse('{"title":"TypeScript - Union Type 정의와 사용법 간단 정리","description":"","frontmatter":{"title":"TypeScript - Union Type 정의와 사용법 간단 정리"},"headers":[],"relativePath":"fe-dev/javascript/union-type.md","filePath":"fe-dev/javascript/union-type.md"}'),p={name:"fe-dev/javascript/union-type.md"},e=n(`<h1 id="typescript-union-type-정의와-사용법-간단-정리" tabindex="-1">TypeScript - Union Type 정의와 사용법 간단 정리 <a class="header-anchor" href="#typescript-union-type-정의와-사용법-간단-정리" aria-label="Permalink to &quot;TypeScript - Union Type 정의와 사용법 간단 정리&quot;">​</a></h1><h2 id="union-type-이란" tabindex="-1">Union Type 이란? <a class="header-anchor" href="#union-type-이란" aria-label="Permalink to &quot;Union Type 이란?&quot;">​</a></h2><p>Union Type은 두 개 이상의 타입을 조합해서 정의한 타입이다.</p><p>예를 들어 다수의 자료형이 있으면,</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Square</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  kind</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;square&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  kind</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rectangle&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  kind</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;circle&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  radius</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Union Type은 이렇게 <code>|</code>로 구분해서 정의한다.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Shape</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Square</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Rectangle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Circle</span></span></code></pre></div><h3 id="union-type의-타입-추론" tabindex="-1">Union Type의 타입 추론 <a class="header-anchor" href="#union-type의-타입-추론" aria-label="Permalink to &quot;Union Type의 타입 추론&quot;">​</a></h3><p>TypeScript에서는 <a href="https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing" target="_blank" rel="noreferrer">타입 추론(type inference)</a>을 통해 각 타입을 추론하게 된다. TypeScript를 확인해 볼 때는 <a href="https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgMoEcCucooN4BQyyA1qACYBcyA5AM5Y4Q1HJ3ABeE1ImAtgCNoBAL4FQkWIhQAlCAjBwQAcwA2+VmRBVauBUrXNWAd2DkwACx78hUVhYjBlFsNcHCxE6PCTIAwsBQCOrIhMRaOjQIgcFGxFBw5MCYdG62ogQEYACeAA4oqBZw+cgAvGiMuMgAPshy+iohtQFB6pkIAPYgdGDIyhBgAIK4cGXIABR0RfnUhcUQAJTUStllAHyhrMAwE1PzAHQRZaXlAEQM2LinC5vExAD098iAN6OADHWAOIN18oqNEIA-Nf4YupABrjyEAIKuAHQ7AD7LgAelwA+nawHk9ADUDgEqxwAaq4AXLuQgAGFwCh48hAAujgBv2wAANchADg9gF2BwA6q4ATpv2iOQuDAmCgIDY0wg+3YXGQACpOQdeRAANysMRI5BUwCt7aIgA" target="_blank" rel="noreferrer">TypeScript Playground</a>로 온라인에서 확인할 수 있다.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getArea</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">shape</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Shape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (shape.kind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 여기서 Rectangle과 Circle의 프로퍼티를</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 사용하면 타입 에러가 발생한다.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shape.size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shape.size;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 생략</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,10),t=[e];function h(l,k,r,d,g,y){return a(),i("div",null,t)}const A=s(p,[["render",h]]);export{o as __pageData,A as default};
