import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as t,e as a}from"./app-5d7ce974.js";const n={},o=a(`<h1 id="preparing-interview-questions" tabindex="-1"><a class="header-anchor" href="#preparing-interview-questions" aria-hidden="true">#</a> Preparing Interview Questions</h1><blockquote><p>Software Craftsman | Written by Sandro Mancuso as Kwon Oh-in | Gilbert | 25 Sep 2015</p><ol><li>A good interview should be like a free discussion. We need to exchange knowledge and information about software development, and we need to discuss technologies, tools, and methodologies.</li><li>What are our core values? What are the main skills we need? What are the things you want to do better, do you want to get better? Before you hire a new person, you need to prepare your own answers to these questions.</li></ol></blockquote><h2 id="why-should-i-prepare-questions" tabindex="-1"><a class="header-anchor" href="#why-should-i-prepare-questions" aria-hidden="true">#</a> Why should I prepare questions?</h2><p>An interview is the process of finding a colleague to work with. The interviewer should determine if the candidate is the person we need, whether he or she is a good person to work with, and whether he or she is a good person to work with.</p><p>However, I&#39;ve seen many cases where the interviewer failed to ask the applicant a few questions or failed to evaluate the applicant because he was focused on the question.</p><p>Considering the applicant&#39;s time and effort to support our company, the interviewer also needs to be prepared at a minimum. Preparing interview questions will allow you to focus your assessment of the candidate and allow for rich conversations during the interview.</p><h2 id="when-should-i-prepare-my-questions" tabindex="-1"><a class="header-anchor" href="#when-should-i-prepare-my-questions" aria-hidden="true">#</a> When should I prepare my questions?</h2><p>If you don&#39;t have much experience as an interviewer, you need to prepare a day in advance. This is because you need to prepare a list of questions by looking at the applicant&#39;s cover letter and project history, and if you have a tech stack that you have never done before, you need to prepare questions after basic learning.</p><p>If you have a lot of experience as an interviewer, it is enough to prepare 30~60 minutes in advance. This is because at this time, it is easy to look at your resume and come up with a list of questions. And in many cases, we already know about the tech stack.</p><h2 id="how-to-create-a-list-of-questions" tabindex="-1"><a class="header-anchor" href="#how-to-create-a-list-of-questions" aria-hidden="true">#</a> How to create a list of questions</h2><p>The list of questions should be prepared by looking at the cover letter and performance history on the resume. Write it in a place where you can write text, such as a notepad or Word, and use a list of questions during the interview.</p><p>Here&#39;s an example of a list of questions I wrote while preparing for an interview:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># Self-introduction
- What is the &quot;comfortable user experience&quot; that you have thought about?
- What is the &quot;clean code that is easy to read and maintain&quot; that you think of?
- Why did you become interested in functional programming?

# Performance history
## A project
- Why did you choose SPA?
- What are the points to consider when using SPA?
- What role did you play as a team leader?
- What are the team rules and branch strategies?

## B project
- You switched from Redux to React Query, what was inconvenient about Redux?
- Did React Query solve it?
- How was the conversion process?
- Were there any inconveniences caused by the introduction of React Query?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-of-questions-by-type-examples" tabindex="-1"><a class="header-anchor" href="#list-of-questions-by-type-examples" aria-hidden="true">#</a> List of questions by type Examples</h3><h4 id="narrow-range-of-questions" tabindex="-1"><a class="header-anchor" href="#narrow-range-of-questions" aria-hidden="true">#</a> Narrow range of questions</h4><ul><li>What kind of techset did you use?</li><li>What role did you play in this project?</li><li>What problems did you solve using this?</li><li>How did you go about documenting it?</li></ul><h4 id="questions-from-a-wide-range" tabindex="-1"><a class="header-anchor" href="#questions-from-a-wide-range" aria-hidden="true">#</a> Questions from a wide range</h4><ul><li>Is there anything you&#39;ve done on this project/internship that stands out to you?</li><li>Is there anything you want to brag about here?</li><li>Were there any problems that you struggled with or struggled to solve while working on this project?</li><li>How did you approach solving this problem?</li></ul><h4 id="empirical-questions" tabindex="-1"><a class="header-anchor" href="#empirical-questions" aria-hidden="true">#</a> Empirical Questions</h4><p>Empirical questions can be asked if the applicant&#39;s work experience matches your own. In this area, expanding the coverage of knowledge can increase the amount of questions.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1. A question about the expected performance issues based on the service features
2. A question about the cache behavior of Recoil&#39;s Selector
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="questions-about-a-resume-written-in-the-abstract" tabindex="-1"><a class="header-anchor" href="#questions-about-a-resume-written-in-the-abstract" aria-hidden="true">#</a> Questions about a resume written in the abstract</h4><p>Sometimes, there are applicants who write their resumes in an abstract way, and in this situation, this is a question that can give you an idea of how the applicant has done FE development work concretely.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1. A question asking for a career description focused on JavaScript
2. A question about how JavaScript was used in the service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="coming-up-with-new-questions-during-the-interview" tabindex="-1"><a class="header-anchor" href="#coming-up-with-new-questions-during-the-interview" aria-hidden="true">#</a> Coming up with new questions during the interview</h2><ol><li>After the applicant has finished introducing themselves, ask questions about the project or technology they mentioned in their introduction.</li></ol><ul><li>You can follow up the interview questions naturally.</li></ul><ol><li>If the candidate says they&#39;ve done something, ask them about their recent relevant experiences.</li></ol><ul><li>You can make sure that the applicant has really experienced it.</li></ul><ol><li>Ask questions in-depth, not short-answer questions</li></ol><ul><li>If you end up with a short answer, you will continue the conversation in a consumptive way, so if you ask in-depth questions, you can naturally continue the question.</li></ul>`,31),s=[o];function r(d,u){return i(),t("div",null,s)}const c=e(n,[["render",r],["__file","questions-list.html.vue"]]);export{c as default};
