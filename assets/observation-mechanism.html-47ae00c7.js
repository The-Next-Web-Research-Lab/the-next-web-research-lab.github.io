const e=JSON.parse('{"key":"v-50a038ac","path":"/essay/observation-mechanism.html","title":"옵져버 매커니즘","lang":"ko-KR","frontmatter":{"title":"옵져버 매커니즘","description":"옵져버 매커니즘 2019년 5월 20일에 정리한 포스트입니다. 글의 목적 정보 전달 목적보다는 자료 정리 목적으로 작성된 포스트라 정돈이 안되있다. AngularJs를 사용한 프로젝트에서 성능 이슈로 밤낮세며 개선 방안을 찾은 기억이 있다. 그 경험 때문에 라이브러리들의 옵져버 매커니즘은 어떻게 구현되는 지 가끔 살펴본다. 개인적으로는 그 중에 VueJs의 옵져버 매커니즘은 가장 이상적이라고 생각한다. 각 라이브러리 별로 구현된 옵져버 매커니즘을 정리해본 자료이다.","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://the-next-web-research-lab.github.io/en/essay/observation-mechanism.html"}],["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/essay/observation-mechanism.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"옵져버 매커니즘"}],["meta",{"property":"og:description","content":"옵져버 매커니즘 2019년 5월 20일에 정리한 포스트입니다. 글의 목적 정보 전달 목적보다는 자료 정리 목적으로 작성된 포스트라 정돈이 안되있다. AngularJs를 사용한 프로젝트에서 성능 이슈로 밤낮세며 개선 방안을 찾은 기억이 있다. 그 경험 때문에 라이브러리들의 옵져버 매커니즘은 어떻게 구현되는 지 가끔 살펴본다. 개인적으로는 그 중에 VueJs의 옵져버 매커니즘은 가장 이상적이라고 생각한다. 각 라이브러리 별로 구현된 옵져버 매커니즘을 정리해본 자료이다."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-22T07:50:41.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"옵져버 매커니즘"}],["meta",{"property":"article:modified_time","content":"2023-06-22T07:50:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"옵져버 매커니즘\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2023-06-22T07:50:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"글의 목적","slug":"글의-목적","link":"#글의-목적","children":[]},{"level":3,"title":"목차","slug":"목차","link":"#목차","children":[]},{"level":3,"title":"라이브러리별 옵져버 매커니즘","slug":"라이브러리별-옵져버-매커니즘","link":"#라이브러리별-옵져버-매커니즘","children":[]},{"level":3,"title":"끝","slug":"끝","link":"#끝","children":[]}],"git":{"createdTime":1687351424000,"updatedTime":1687420241000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":2}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"essay/observation-mechanism.md","localizedDate":"2023년 6월 21일","excerpt":"<h1> 옵져버 매커니즘</h1>\\n<blockquote>\\n<p>2019년 5월 20일에 정리한 포스트입니다.</p>\\n</blockquote>\\n<h3> 글의 목적</h3>\\n<blockquote>\\n<p>정보 전달 목적보다는 자료 정리 목적으로 작성된 포스트라 정돈이 안되있다.</p>\\n</blockquote>\\n<p>AngularJs를 사용한 프로젝트에서 성능 이슈로 밤낮세며 개선 방안을 찾은 기억이 있다. 그 경험 때문에 라이브러리들의 옵져버 매커니즘은 어떻게 구현되는 지 가끔 살펴본다. 개인적으로는 그 중에 VueJs의 옵져버 매커니즘은 가장 이상적이라고 생각한다. 각 라이브러리 별로 구현된 옵져버 매커니즘을 정리해본 자료이다.</p>","autoDesc":true}');export{e as data};
