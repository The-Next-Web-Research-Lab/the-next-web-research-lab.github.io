import{_ as s,c as a,o as i,a3 as n}from"./chunks/framework.9Buaa5aL.js";const g=JSON.parse('{"title":"2020.02.10 Nuxt v2.0에서 v2.11로 마이그레이션","description":"","frontmatter":{"title":"2020.02.10 Nuxt v2.0에서 v2.11로 마이그레이션"},"headers":[],"relativePath":"fe-dev/framework/nuxt-migration.md","filePath":"fe-dev/framework/nuxt-migration.md"}'),t={name:"fe-dev/framework/nuxt-migration.md"},e=n(`<h1 id="nuxt-v2-0에서-v2-11로-마이그레이션" tabindex="-1">Nuxt v2.0에서 v2.11로 마이그레이션 <a class="header-anchor" href="#nuxt-v2-0에서-v2-11로-마이그레이션" aria-label="Permalink to &quot;Nuxt v2.0에서 v2.11로 마이그레이션&quot;">​</a></h1><h3 id="글의-목적" tabindex="-1">글의 목적 <a class="header-anchor" href="#글의-목적" aria-label="Permalink to &quot;글의 목적&quot;">​</a></h3><p>트위터에서 Nuxt가 TypeScript를 공식적으로 지원함을 알게 되었었다. <a href="https://github.com/nuxt/nuxt.js/releases/tag/v2.9.0" target="_blank" rel="noreferrer">Nuxt v2.9.0</a> 부터 TypeScript에 대한 공식적인 가이드와 마이그레이션 가이드를 알렸다.</p><p>8월초 프로젝트를 셋업하는 당시는 공식적인 가이드를 제공하지 않았는 데, 프로젝트 셋업 후 공식 버전이 릴리즈 되었다. 이 포스트는 프로젝트 중간에 2.11.0으로 마이그레이션 한 내용에 대한 정리이다.</p><h3 id="목차" tabindex="-1">목차 <a class="header-anchor" href="#목차" aria-label="Permalink to &quot;목차&quot;">​</a></h3><ul><li>파일별 업그레이드 내역</li><li>마이그레이션 과정</li><li>마이그레이션 시 발생한 이슈</li></ul><h3 id="파일별-업그레이드-내역" tabindex="-1">파일별 업그레이드 내역 <a class="header-anchor" href="#파일별-업그레이드-내역" aria-label="Permalink to &quot;파일별 업그레이드 내역&quot;">​</a></h3><h4 id="nuxt-config-ts" tabindex="-1">nuxt.config.ts <a class="header-anchor" href="#nuxt-config-ts" aria-label="Permalink to &quot;nuxt.config.ts&quot;">​</a></h4><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- import NuxtConfiguration from &#39;@nuxt/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ import { Configuration } from &#39;@nuxt/types&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- const config: NuxtConfiguration = {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ const config: Configuration = {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-   devModules: [</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-     // Doc: https://github.com/nuxt-community/eslint-module</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-     &#39;@nuxtjs/eslint-module&#39;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-   ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   buildModules: [</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+     [</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+       &#39;@nuxt/typescript-build&#39;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+       {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+         typeCheck: true,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+         ignoreNotFoundWarnings: true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+       }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+     ]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   ],</span></span></code></pre></div><h4 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h4><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    &quot;dev&quot;: &quot;nuxt&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    &quot;build&quot;: &quot;nuxt build&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    &quot;generate&quot;: &quot;nuxt generate&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    &quot;start&quot;: &quot;nuxt start&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;dev&quot;: &quot;nuxt-ts --spa&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;build&quot;: &quot;nuxt-ts build --spa&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;generate&quot;: &quot;nuxt-ts generate&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;start&quot;: &quot;nuxt-ts start&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;dependencies&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;@nuxt/typescript-runtime&quot;: &quot;^0.3.3&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    &quot;nuxt&quot;: &quot;^2.0.0&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;nuxt&quot;: &quot;^2.11.0&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;devDependencies&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    &quot;@nuxt/typescript&quot;: &quot;^2.8.1&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    &quot;@nuxt/typescript-build&quot;: &quot;^0.5.2&quot;,</span></span></code></pre></div><h4 id="tsconfig-json" tabindex="-1">tsconfig.json <a class="header-anchor" href="#tsconfig-json" aria-label="Permalink to &quot;tsconfig.json&quot;">​</a></h4><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  &quot;@nuxt/vue-app&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  &quot;@nuxt/config&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  &quot;@nuxt/types&quot;</span></span></code></pre></div><h4 id="middleware" tabindex="-1">middleware <a class="header-anchor" href="#middleware" aria-label="Permalink to &quot;middleware&quot;">​</a></h4><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- import { Middleware } from &#39;@nuxt/vue-app&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ import { Middleware } from &#39;@nuxt/types&#39;</span></span></code></pre></div><h3 id="마이그레이션-과정" tabindex="-1">마이그레이션 과정 <a class="header-anchor" href="#마이그레이션-과정" aria-label="Permalink to &quot;마이그레이션 과정&quot;">​</a></h3><p>마이그레이션은 3단계로 진행했다. TypeScript를 공식지원하는 버전인 2.9.x의 이전과 다음 버전을 구분했다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1. 2.0.0 =&gt; 2.8.1</span></span>
<span class="line"><span>2. 2.8.1 =&gt; 2.9.2</span></span>
<span class="line"><span>3. 2.9.2 =&gt; 2.11.0</span></span></code></pre></div><p>각 버전의 의미는 다음과 같다.</p><ul><li>2.0.0: 현재 버전</li><li>2.8.1: TypeScript 공식지원 버전의 바로 <strong>이전 버전</strong></li><li>2.9.2: TypeScript 공식지원 시작 버전(2.9.x) 중 가장 높은 버전</li><li>2.11.0: 가장 최신 버전</li></ul><h3 id="마이그레이션-시-발생한-이슈" tabindex="-1">마이그레이션 시 발생한 이슈 <a class="header-anchor" href="#마이그레이션-시-발생한-이슈" aria-label="Permalink to &quot;마이그레이션 시 발생한 이슈&quot;">​</a></h3><p>마이그레이션 시 발생한 이슈 <code>2.8.1</code> =&gt; <code>2.9.2</code>에서 버전 업그레이드 후 발생한 이슈라고 볼 수 있다. 이외 다른 스팩에서는 이슈없이 바로 버전 업그레이드가 진행되었다.</p><h4 id="server-종료-되는-현상-해결" tabindex="-1">Server 종료 되는 현상 해결 <a class="header-anchor" href="#server-종료-되는-현상-해결" aria-label="Permalink to &quot;Server 종료 되는 현상 해결&quot;">​</a></h4><p><code>2.8.1</code> =&gt; <code>2.9.2</code> 버전 업그레이드 후 SPA 모드는 커멘드 옵션으로 변경되었다. 개발 단계 서버 실행 시, <code>nuxt --spa</code>로 실행해야 한다.</p><h4 id="scrollbehavior" tabindex="-1">scrollBehavior <a class="header-anchor" href="#scrollbehavior" aria-label="Permalink to &quot;scrollBehavior&quot;">​</a></h4><p>nuxt 2.9.x 부터 app/router.scrollBehavior.js로 처리</p><h4 id="decorator에러-발생" tabindex="-1">Decorator에러 발생 <a class="header-anchor" href="#decorator에러-발생" aria-label="Permalink to &quot;Decorator에러 발생&quot;">​</a></h4><p>nuxt.config.ts를 정상적으로 사용하기 위해서는 <code>@nuxt/typescript-runtime</code> 모듈을 설치해야 한다. nuxt.config.ts에는 TypeScript를 사용하도록 설정하는 파일이 있다. 그렇기 때문에 Runtime 설정도 필요하다.</p><p>설치 후에는 <code>scripts</code>에 <code>nuxt</code>로 사용했던 명령어를 <code>nuxt-ts</code>로 변경이 필요하다.</p><h3 id="끝" tabindex="-1">끝 <a class="header-anchor" href="#끝" aria-label="Permalink to &quot;끝&quot;">​</a></h3><p>사실 Nuxt는 2.11.0으로 업그레이드한 이유는 단순히 마이그레이션의 목적이 아니였다. <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html" target="_blank" rel="noreferrer">TypeScript 3.7</a>부터 <a href="https://github.com/tc39/proposal-optional-chaining" target="_blank" rel="noreferrer">Optional Chaining</a> 스팩이 추가되었는 데, 객체의 프로퍼티 접근 관련해서 안전하고 가독성 좋은 방안을 찾고 있었던 시기였다. 결론적으로 Optional Chaining를 사용하기 위해서 버전 업그레이드에 대한 연쇄적으로 찾아본 결과 Nuxt를 최신 버전으로 업그레이드하게 된 것이다.</p>`,31),l=[e];function p(o,r,h,u,c,d){return i(),a("div",null,l)}const q=s(t,[["render",p]]);export{g as __pageData,q as default};
