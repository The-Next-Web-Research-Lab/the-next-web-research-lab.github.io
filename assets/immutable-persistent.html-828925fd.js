const n=JSON.parse(`{"key":"v-91e8b2b8","path":"/fe-dev/javascript/immutable-persistent.html","title":"불변 자료구조와 영속 자료구조","lang":"ko-KR","frontmatter":{"title":"불변 자료구조와 영속 자료구조","description":"불변 자료구조와 영속 자료구조 불변 자료구조 - Immutable Data Structures 불변 자료 구조는 영원히 변하지 않는 상태를 말합니다. 변화가 필요할 때 새로운 상태를 만들어 내고 값을 변경합니다. JSON 클론을 사용한 예시 const clone = obj =&gt; JSON.parse(JSON.stringify(obj)) const obj = { message: 'Hello World', inner: { count: 1 } } const clonedObj = clone(obj); console.log(obj === clonedObj) // false console.log(obj.inner === clonedObj.inner) // false","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://the-next-web-research-lab.github.io/en/fe-dev/javascript/immutable-persistent.html"}],["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/fe-dev/javascript/immutable-persistent.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"불변 자료구조와 영속 자료구조"}],["meta",{"property":"og:description","content":"불변 자료구조와 영속 자료구조 불변 자료구조 - Immutable Data Structures 불변 자료 구조는 영원히 변하지 않는 상태를 말합니다. 변화가 필요할 때 새로운 상태를 만들어 내고 값을 변경합니다. JSON 클론을 사용한 예시 const clone = obj =&gt; JSON.parse(JSON.stringify(obj)) const obj = { message: 'Hello World', inner: { count: 1 } } const clonedObj = clone(obj); console.log(obj === clonedObj) // false console.log(obj.inner === clonedObj.inner) // false"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-22T06:27:16.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"불변 자료구조와 영속 자료구조"}],["meta",{"property":"article:modified_time","content":"2023-07-22T06:27:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"불변 자료구조와 영속 자료구조\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2023-07-22T06:27:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"불변 자료구조 - Immutable Data Structures","slug":"불변-자료구조-immutable-data-structures","link":"#불변-자료구조-immutable-data-structures","children":[{"level":3,"title":"JSON 클론을 사용한 예시","slug":"json-클론을-사용한-예시","link":"#json-클론을-사용한-예시","children":[]}]},{"level":2,"title":"영속 자료 구조 - Pesistent Data Structures","slug":"영속-자료-구조-pesistent-data-structures","link":"#영속-자료-구조-pesistent-data-structures","children":[]},{"level":2,"title":"immerJs을 사용한 예시","slug":"immerjs을-사용한-예시","link":"#immerjs을-사용한-예시","children":[]},{"level":2,"title":"참고자료","slug":"참고자료","link":"#참고자료","children":[]}],"git":{"createdTime":1690007236000,"updatedTime":1690007236000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":1}]},"readingTime":{"minutes":0.34,"words":102},"filePathRelative":"fe-dev/javascript/immutable-persistent.md","localizedDate":"2023년 7월 22일","excerpt":"<h1> 불변 자료구조와 영속 자료구조</h1>\\n<h2> 불변 자료구조 - Immutable Data Structures</h2>\\n<p>불변 자료 구조는 영원히 변하지 않는 상태를 말합니다. 변화가 필요할 때 새로운 상태를 만들어 내고 값을 변경합니다.</p>\\n<h3> JSON 클론을 사용한 예시</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">clone</span> <span class=\\"token operator\\">=</span> <span class=\\"token parameter\\">obj</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stringify</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">message</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'Hello World'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">inner</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">count</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> clonedObj <span class=\\"token operator\\">=</span> <span class=\\"token function\\">clone</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj <span class=\\"token operator\\">===</span> clonedObj<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// false</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span>inner <span class=\\"token operator\\">===</span> clonedObj<span class=\\"token punctuation\\">.</span>inner<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// false</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
