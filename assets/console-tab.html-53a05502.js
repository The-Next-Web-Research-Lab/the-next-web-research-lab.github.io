import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as r,c as n,a as e,b as s,d as l,e as i}from"./app-b74e304f.js";const c="/assets/ec7b52ef-b650-4601-8760-75f58e224ab3-54b8b29c.png",u="/assets/cbe3b307-cc49-4548-95c5-ed507c33367f-20aa4929.png",h="/assets/0b20c391-50d7-4f28-9a61-e5748845059b-a655e35b.png",p="/assets/ffe52505-2cdb-4f58-9b88-0149068416f1-af7a28b7.png",d="/assets/49b9e108-0609-4e6e-a90d-e6c7d1ca85ff-bd92c4af.png",f={},m=i('<h1 id="developer-tools-console-tab-utility-function" tabindex="-1"><a class="header-anchor" href="#developer-tools-console-tab-utility-function" aria-hidden="true">#</a> {Developer Tools} Console tab utility function</h1><p>The Console tab in developer tools provides useful utility functions for debugging.</p><p>Today we will learn about Console tab utility functions that we will use someday.</p><p>index</p><ul><li>clear(): When you want to remove all console logs</li><li>copy(param): When you want to copy</li><li>$_: When you want to refer to the previous execution result</li><li>$(selector), $$(selector): When you want to refer to the DOM</li></ul><h2 id="clear-when-you-want-to-remove-all-console-logs" tabindex="-1"><a class="header-anchor" href="#clear-when-you-want-to-remove-all-console-logs" aria-hidden="true">#</a> clear(): When you want to remove all console logs</h2><p><img src="'+c+'" alt="1_1"></p><p>The clear() function removes all logs currently displayed in the console panel. This is useful when you want to remove all logs and start working on something new.</p><p><img src="'+u+'" alt="1_2"></p><p>After executing clear(), you will see something like Console was cleared.</p><h2 id="copy-param-when-you-want-to-copy" tabindex="-1"><a class="header-anchor" href="#copy-param-when-you-want-to-copy" aria-hidden="true">#</a> copy(param): When you want to copy</h2><p><img src="'+h+'" alt="2_1"></p><p>copy(param) copies the content in param. This is useful when you want to copy the JavaScript execution results. It is also used to create mock-up data to be used in test cases.</p><h2 id="when-you-want-to-refer-to-the-previous-execution-result" tabindex="-1"><a class="header-anchor" href="#when-you-want-to-refer-to-the-previous-execution-result" aria-hidden="true">#</a> $_: When you want to refer to the previous execution result</h2><p><img src="'+p+'" alt="3"></p><p>$_ is used when you want to refer to the previous execution result.</p><p>When debugging an array, you can run the array first and reference it with $_.</p><h2 id="selector-selector-when-you-want-to-refer-to-the-dom" tabindex="-1"><a class="header-anchor" href="#selector-selector-when-you-want-to-refer-to-the-dom" aria-hidden="true">#</a> $(selector), $$(selector): When you want to refer to the DOM</h2><p><img src="'+d+'" alt="4"></p><p>$(selector), $$(selector) are used when you want to refer to the DOM. $(selector) is similar to document.querySelector, and $$(selector) is similar to document.querySelectorAll.</p><p>So far, we have looked at the Console tab utility functions.</p><p>There are various other functions in addition to the utility functions introduced here, so if you are curious, please refer to the links below.</p>',22),y={href:"https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/console/utilities",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"thank you",-1);function _(b,g){const o=a("ExternalLinkIcon");return r(),n("div",null,[m,e("p",null,[e("a",y,[s("https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/console/utilities"),l(o)])]),w])}const $=t(f,[["render",_],["__file","console-tab.html.vue"]]);export{$ as default};
