import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c,a as s,b as n,d as e,e as t}from"./app-aadac4b8.js";const r={},l=t(`<h1 id="typescript-union-type-정의와-사용법-간단-정리" tabindex="-1"><a class="header-anchor" href="#typescript-union-type-정의와-사용법-간단-정리" aria-hidden="true">#</a> TypeScript - Union Type 정의와 사용법 간단 정리</h1><h2 id="union-type-이란" tabindex="-1"><a class="header-anchor" href="#union-type-이란" aria-hidden="true">#</a> Union Type 이란?</h2><p>Union Type은 두 개 이상의 타입을 조합해서 정의한 타입이다.</p><p>예를 들어 다수의 자료형이 있으면,</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;square&#39;</span>
  size<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;rectangle&#39;</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Union Type은 이렇게 <code>|</code>로 구분해서 정의한다.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle <span class="token operator">|</span> Circle
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="union-type의-타입-추론" tabindex="-1"><a class="header-anchor" href="#union-type의-타입-추론" aria-hidden="true">#</a> Union Type의 타입 추론</h3>`,8),d={href:"https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgMoEcCucooN4BQyyA1qACYBcyA5AM5Y4Q1HJ3ABeE1ImAtgCNoBAL4FQkWIhQAlCAjBwQAcwA2+VmRBVauBUrXNWAd2DkwACx78hUVhYjBlFsNcHCxE6PCTIAwsBQCOrIhMRaOjQIgcFGxFBw5MCYdG62ogQEYACeAA4oqBZw+cgAvGiMuMgAPshy+iohtQFB6pkIAPYgdGDIyhBgAIK4cGXIABR0RfnUhcUQAJTUStllAHyhrMAwE1PzAHQRZaXlAEQM2LinC5vExAD098iAN6OADHWAOIN18oqNEIA-Nf4YupABrjyEAIKuAHQ7AD7LgAelwA+nawHk9ADUDgEqxwAaq4AXLuQgAGFwCh48hAAujgBv2wAANchADg9gF2BwA6q4ATpv2iOQuDAmCgIDY0wg+3YXGQACpOQdeRAANysMRI5BUwCt7aIgA",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">getArea</span> <span class="token operator">=</span> <span class="token punctuation">(</span>shape<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shape<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&quot;square&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 여기서 Rectangle과 Circle의 프로퍼티를</span>
    <span class="token comment">// 사용하면 타입 에러가 발생한다.</span>
    <span class="token keyword">return</span> shape<span class="token punctuation">.</span>size <span class="token operator">*</span> shape<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 생략</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function v(m,h){const a=i("ExternalLinkIcon");return o(),c("div",null,[l,s("p",null,[n("TypeScript에서는 "),s("a",d,[n("타입 추론(type inference)"),e(a)]),n("을 통해 각 타입을 추론하게 된다. TypeScript를 확인해 볼 때는 "),s("a",u,[n("TypeScript Playground"),e(a)]),n("로 온라인에서 확인할 수 있다.")]),k])}const y=p(r,[["render",v],["__file","union-type.html.vue"]]);export{y as default};
