import{_ as s,o as n,c as a,e}from"./app-22ce4da6.js";const t={},p=e(`<h2 id="input-js" tabindex="-1"><a class="header-anchor" href="#input-js" aria-hidden="true">#</a> input.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">REGEXP_KOREAN_ALPHABET</span> <span class="token operator">=</span> <span class="token string">&#39;[a-zA-Z가-힣ㄱ-ㅎㅏ-ㅣ]{1,}&#39;</span>
<span class="token keyword">const</span> <span class="token constant">REGEXP_KOREAN_ALPHABET_NUMBER</span> <span class="token operator">=</span> <span class="token string">&#39;[a-zA-Z가-힣ㄱ-ㅎㅏ-ㅣ0-9 _]{1,}&#39;</span>
<span class="token keyword">const</span> <span class="token constant">REGEXP_KOREAN_ALPHABET_WHITESPACE</span> <span class="token operator">=</span> <span class="token string">&#39;[a-zA-Z가-힣ㄱ-ㅎㅏ-ㅣ ]{1,}&#39;</span>
<span class="token keyword">const</span> <span class="token constant">REGEXP_NUMBER</span> <span class="token operator">=</span> <span class="token string">&#39;[0-9]{0,}&#39;</span>

<span class="token keyword">const</span> <span class="token constant">REGEXP</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 한글, 영문, 숫자, 공백허용, 특수기호 불가능</span>
  <span class="token constant">KOREAN_ALPHABET_NUMBER_WHITESPACE</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[가-힣ㄱ-ㅎㅏ-ㅣa-zA-Z0-9\\s]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
  <span class="token comment">// 한글, 영문, 숫자, 공백허용, 일부 특수기호 허용 (즉, 이모지 불가능)</span>
  <span class="token constant">ALL_AND_LIMITED_SPECIAL_CHARACTERS</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[가-힣ㄱ-ㅎㅏ-ㅣa-zA-Z0-9\\s\`₩~!@#$%^&amp;*()_+\\-=[\\]{}&lt;&gt;,.?/|\\\\&#39;&quot;:;]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
  <span class="token comment">// 숫자만 허용</span>
  <span class="token constant">NUMBER</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="date-js" tabindex="-1"><a class="header-anchor" href="#date-js" aria-hidden="true">#</a> date.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> date<span class="token punctuation">]</span> <span class="token operator">=</span> birthDateStr
  <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{4})(\\d{2})(\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1-$2-$3&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>

<span class="token string">&#39;2018.02.14&#39;</span>
  <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{4}.(\\d{2}).(\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1/$2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^0</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 2/14</span>
<span class="token string">&#39;2018.12.14&#39;</span>
  <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{4}.(\\d{2}).(\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1/$2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^0</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 12/14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="url-js" tabindex="-1"><a class="header-anchor" href="#url-js" aria-hidden="true">#</a> url.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">URL_REGEXP</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$</span><span class="token regex-delimiter">/</span></span>

<span class="token keyword">const</span> <span class="token function-variable function">urlToAnchor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token constant">URL_REGEXP</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;a href=&quot;$&amp;&quot;&gt;$&amp;&lt;/a&gt;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="special-char-js" tabindex="-1"><a class="header-anchor" href="#special-char-js" aria-hidden="true">#</a> special-char.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">escapeSpecialChar</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[.*+?^\${}()|[\\]\\\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
  <span class="token string">&#39;\\\\$&amp;&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),c=[p];function o(l,i){return n(),a("div",null,c)}const u=s(t,[["render",o],["__file","RegExp.html.vue"]]);export{u as default};
