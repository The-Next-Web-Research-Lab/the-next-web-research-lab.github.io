const e=JSON.parse('{"key":"v-79a9cd36","path":"/fe-dev/good-code/solid-isp.html","title":"인터페이스 분리 원칙","lang":"ko-KR","frontmatter":{"title":"인터페이스 분리 원칙","description":"SOLID 원칙 시리즈 - 인터페이스 분리 원칙 ISP: 인터페이스 분리 원칙 (Interface Segregation Principle) Ops 클래스 그리고 op1, op2, op3 오퍼레이션이 있고 사용자 클래스인 User1, User2, User3가 있다고 가정하겠다. User1은 op1만 사용하고, User2은 op2만 사용하고, User3은 op3만 사용한다. Ops의 오퍼레이션이 하나라도 수정되면 사용자 클래스는 모두 수정되어야 한다. 각 사용자 클래스는 사용하지 않는 오퍼레이션에 의존하고 있다.","head":[["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/fe-dev/good-code/solid-isp.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"인터페이스 분리 원칙"}],["meta",{"property":"og:description","content":"SOLID 원칙 시리즈 - 인터페이스 분리 원칙 ISP: 인터페이스 분리 원칙 (Interface Segregation Principle) Ops 클래스 그리고 op1, op2, op3 오퍼레이션이 있고 사용자 클래스인 User1, User2, User3가 있다고 가정하겠다. User1은 op1만 사용하고, User2은 op2만 사용하고, User3은 op3만 사용한다. Ops의 오퍼레이션이 하나라도 수정되면 사용자 클래스는 모두 수정되어야 한다. 각 사용자 클래스는 사용하지 않는 오퍼레이션에 의존하고 있다."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-07-25T13:57:17.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"인터페이스 분리 원칙"}],["meta",{"property":"article:modified_time","content":"2023-07-25T13:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"인터페이스 분리 원칙\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2023-07-25T13:57:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"ISP: 인터페이스 분리 원칙 (Interface Segregation Principle)","slug":"isp-인터페이스-분리-원칙-interface-segregation-principle","link":"#isp-인터페이스-분리-원칙-interface-segregation-principle","children":[]}],"git":{"createdTime":1689838539000,"updatedTime":1690293437000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":2}]},"readingTime":{"minutes":0.13,"words":39},"filePathRelative":"fe-dev/good-code/solid-isp.md","localizedDate":"2023년 7월 20일","excerpt":"<h1> SOLID 원칙 시리즈 - 인터페이스 분리 원칙</h1>\\n<h2> ISP: 인터페이스 분리 원칙 (Interface Segregation Principle)</h2>\\n<p>Ops 클래스 그리고 op1, op2, op3 오퍼레이션이 있고 사용자 클래스인 User1, User2, User3가 있다고 가정하겠다.</p>\\n<p>User1은 op1만 사용하고, User2은 op2만 사용하고, User3은 op3만 사용한다. Ops의 오퍼레이션이 하나라도 수정되면 사용자 클래스는 모두 수정되어야 한다. 각 사용자 클래스는 사용하지 않는 오퍼레이션에 의존하고 있다.</p>","autoDesc":true}');export{e as data};
