import{_ as e,c as o,o as t,a3 as a}from"./chunks/framework.9Buaa5aL.js";const n="/assets/ec7b52ef-b650-4601-8760-75f58e224ab3.4CICJynT.png",s="/assets/cbe3b307-cc49-4548-95c5-ed507c33367f.CYVVZ2_K.png",r="/assets/0b20c391-50d7-4f28-9a61-e5748845059b.DV0cfg7g.png",l="/assets/ffe52505-2cdb-4f58-9b88-0149068416f1.D_R4jsEF.png",i="/assets/49b9e108-0609-4e6e-a90d-e6c7d1ca85ff.Di1FXVjc.png",g=JSON.parse('{"title":"{Developer Tools} Console tab utility function","description":"","frontmatter":{"title":"{Developer Tools} Console tab utility function"},"headers":[],"relativePath":"en/essay/console-tab.md","filePath":"en/essay/console-tab.md"}'),c={name:"en/essay/console-tab.md"},u=a('<h1 id="developer-tools-console-tab-utility-function" tabindex="-1">{Developer Tools} Console tab utility function <a class="header-anchor" href="#developer-tools-console-tab-utility-function" aria-label="Permalink to &quot;{Developer Tools} Console tab utility function&quot;">​</a></h1><p>The Console tab in developer tools provides useful utility functions for debugging.</p><p>Today we will learn about Console tab utility functions that we will use someday.</p><p>index</p><ul><li>clear(): When you want to remove all console logs</li><li>copy(param): When you want to copy</li><li>$_: When you want to refer to the previous execution result</li><li>$(selector), $$(selector): When you want to refer to the DOM</li></ul><h2 id="clear-when-you-want-to-remove-all-console-logs" tabindex="-1">clear(): When you want to remove all console logs <a class="header-anchor" href="#clear-when-you-want-to-remove-all-console-logs" aria-label="Permalink to &quot;clear(): When you want to remove all console logs&quot;">​</a></h2><p><img src="'+n+'" alt="1_1"></p><p>The clear() function removes all logs currently displayed in the console panel. This is useful when you want to remove all logs and start working on something new.</p><p><img src="'+s+'" alt="1_2"></p><p>After executing clear(), you will see something like Console was cleared.</p><h2 id="copy-param-when-you-want-to-copy" tabindex="-1">copy(param): When you want to copy <a class="header-anchor" href="#copy-param-when-you-want-to-copy" aria-label="Permalink to &quot;copy(param): When you want to copy&quot;">​</a></h2><p><img src="'+r+'" alt="2_1"></p><p>copy(param) copies the content in param. This is useful when you want to copy the JavaScript execution results. It is also used to create mock-up data to be used in test cases.</p><h2 id="when-you-want-to-refer-to-the-previous-execution-result" tabindex="-1">$_: When you want to refer to the previous execution result <a class="header-anchor" href="#when-you-want-to-refer-to-the-previous-execution-result" aria-label="Permalink to &quot;$_: When you want to refer to the previous execution result&quot;">​</a></h2><p><img src="'+l+'" alt="3"></p><p>$_ is used when you want to refer to the previous execution result.</p><p>When debugging an array, you can run the array first and reference it with $_.</p><h2 id="selector-selector-when-you-want-to-refer-to-the-dom" tabindex="-1">$(selector), $$(selector): When you want to refer to the DOM <a class="header-anchor" href="#selector-selector-when-you-want-to-refer-to-the-dom" aria-label="Permalink to &quot;$(selector), $$(selector): When you want to refer to the DOM&quot;">​</a></h2><p><img src="'+i+'" alt="4"></p><p>$(selector), $$(selector) are used when you want to refer to the DOM. $(selector) is similar to document.querySelector, and $$(selector) is similar to document.querySelectorAll.</p><p>So far, we have looked at the Console tab utility functions.</p><p>There are various other functions in addition to the utility functions introduced here, so if you are curious, please refer to the links below.</p><p><a href="https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/console/utilities" target="_blank" rel="noreferrer">https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/console/utilities</a></p><p>thank you</p>',24),p=[u];function h(d,f,y,m,_,w){return t(),o("div",null,p)}const v=e(c,[["render",h]]);export{g as __pageData,v as default};
