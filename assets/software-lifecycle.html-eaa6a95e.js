const e=JSON.parse('{"key":"v-4092052c","path":"/fe-dev/project-management/software-lifecycle.html","title":"소프트웨어 생명주기 간단 정리","lang":"ko-KR","frontmatter":{"title":"소프트웨어 생명주기 간단 정리","description":"소프트웨어를 만들 때는 규모를 불문하고 소프트웨어 생명주기 순서로 업무를 진행하는 것을 지향한다. 생명주기 순서로 진행하게 되면 효율적으로 시간을 활용할 수 있다. 1. 정의단계 1. 요구명세화 2. 분석 2. 개발단계 1. 설계 2. 개발 3. 시험 3. 지원단계 유지보수","head":[["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/fe-dev/project-management/software-lifecycle.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"소프트웨어 생명주기 간단 정리"}],["meta",{"property":"og:description","content":"소프트웨어를 만들 때는 규모를 불문하고 소프트웨어 생명주기 순서로 업무를 진행하는 것을 지향한다. 생명주기 순서로 진행하게 되면 효율적으로 시간을 활용할 수 있다. 1. 정의단계 1. 요구명세화 2. 분석 2. 개발단계 1. 설계 2. 개발 3. 시험 3. 지원단계 유지보수"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"소프트웨어 생명주기 간단 정리\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":null},"filePathRelative":"fe-dev/project-management/software-lifecycle.md","autoDesc":true}');export{e as data};
