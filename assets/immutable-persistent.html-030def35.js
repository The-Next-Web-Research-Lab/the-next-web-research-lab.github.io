const e=JSON.parse(`{"key":"v-152fce10","path":"/en/fe-dev/javascript/immutable-persistent.html","title":"Immutable Data Structures and Persistent Data Structures","lang":"en-US","frontmatter":{"title":"Immutable Data Structures and Persistent Data Structures","description":"Immutable Data Structures and Persistent Data Structures Immutable Data Structures Immutable data structures refer to states that never change. When a change is needed, a new state is created and the value is changed. Example using JSON clone const clone = obj =&gt; JSON.parse(JSON.stringify(obj)) const obj = { message: 'Hello World', inner: { count: 1 } } const clonedObj = clone(obj); console.log(obj === clonedObj) // false console.log(obj.inner === clonedObj.inner) // false","head":[["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://the-next-web-research-lab.github.io/fe-dev/javascript/immutable-persistent.html"}],["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/en/fe-dev/javascript/immutable-persistent.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"Immutable Data Structures and Persistent Data Structures"}],["meta",{"property":"og:description","content":"Immutable Data Structures and Persistent Data Structures Immutable Data Structures Immutable data structures refer to states that never change. When a change is needed, a new state is created and the value is changed. Example using JSON clone const clone = obj =&gt; JSON.parse(JSON.stringify(obj)) const obj = { message: 'Hello World', inner: { count: 1 } } const clonedObj = clone(obj); console.log(obj === clonedObj) // false console.log(obj.inner === clonedObj.inner) // false"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Immutable Data Structures and Persistent Data Structures"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Immutable Data Structures and Persistent Data Structures\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Immutable Data Structures","slug":"immutable-data-structures","link":"#immutable-data-structures","children":[{"level":3,"title":"Example using JSON clone","slug":"example-using-json-clone","link":"#example-using-json-clone","children":[]}]},{"level":2,"title":"Persistent Data Structures","slug":"persistent-data-structures","link":"#persistent-data-structures","children":[]},{"level":2,"title":"Example using immerJs","slug":"example-using-immerjs","link":"#example-using-immerjs","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.76,"words":227},"filePathRelative":"en/fe-dev/javascript/immutable-persistent.md","excerpt":"<h1> Immutable Data Structures and Persistent Data Structures</h1>\\n<h2> Immutable Data Structures</h2>\\n<p>Immutable data structures refer to states that never change. When a change is needed, a new state is created and the value is changed.</p>\\n<h3> Example using JSON clone</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">clone</span> <span class=\\"token operator\\">=</span> <span class=\\"token parameter\\">obj</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stringify</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">message</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'Hello World'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">inner</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">count</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> clonedObj <span class=\\"token operator\\">=</span> <span class=\\"token function\\">clone</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj <span class=\\"token operator\\">===</span> clonedObj<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// false</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span>inner <span class=\\"token operator\\">===</span> clonedObj<span class=\\"token punctuation\\">.</span>inner<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// false</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
