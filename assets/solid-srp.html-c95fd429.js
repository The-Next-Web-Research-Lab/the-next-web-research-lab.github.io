const e=JSON.parse('{"key":"v-538f52ab","path":"/fe-dev/good-code/solid-srp.html","title":"단일 책임 원칙","lang":"ko-KR","frontmatter":{"title":"단일 책임 원칙","description":"SOLID 원칙 시리즈 - 단일 책임 원칙 SRP: 단일 책임 원칙 (Single Responsibility Principle) 역사적으로 SRP는 \\"단일 모듈은 변경의 이유가 하나. 오직 하나뿐이어야 한다.\\"로 기술되어 있다. 변경의 이유는 무엇을 의미하는 할까? 소프트웨어 시스템은 사용자와 이해관계자를 만족시키기 위해 변경된다. SRP가 말하는 변경의 이유는 바로 이들 사용자와 이해관계자를 가리킨다. 단일 모듈은 무엇을 의미하는 할까? 가장 단순한 정의는 소스파일이다. 대부분의 경우 이 정의는 잘 들어 맞는다. 하지만 일부 언어와 개발 환경에서는 코드를 소스파일에 저장하지 않는다. 이러한 경우 모듈은 단순히 함수와 데이터 구조로 구성된 응집된 집합이다.","head":[["meta",{"property":"og:url","content":"https://the-next-web-research-lab.github.io/fe-dev/good-code/solid-srp.html"}],["meta",{"property":"og:site_name","content":"더넥스트웹리서치랩"}],["meta",{"property":"og:title","content":"단일 책임 원칙"}],["meta",{"property":"og:description","content":"SOLID 원칙 시리즈 - 단일 책임 원칙 SRP: 단일 책임 원칙 (Single Responsibility Principle) 역사적으로 SRP는 \\"단일 모듈은 변경의 이유가 하나. 오직 하나뿐이어야 한다.\\"로 기술되어 있다. 변경의 이유는 무엇을 의미하는 할까? 소프트웨어 시스템은 사용자와 이해관계자를 만족시키기 위해 변경된다. SRP가 말하는 변경의 이유는 바로 이들 사용자와 이해관계자를 가리킨다. 단일 모듈은 무엇을 의미하는 할까? 가장 단순한 정의는 소스파일이다. 대부분의 경우 이 정의는 잘 들어 맞는다. 하지만 일부 언어와 개발 환경에서는 코드를 소스파일에 저장하지 않는다. 이러한 경우 모듈은 단순히 함수와 데이터 구조로 구성된 응집된 집합이다."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://the-next-web-research-lab.github.io/images/og_image.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-07-25T13:57:17.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"단일 책임 원칙"}],["meta",{"property":"article:modified_time","content":"2023-07-25T13:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"단일 책임 원칙\\",\\"image\\":[\\"https://the-next-web-research-lab.github.io/images/og_image.png\\"],\\"dateModified\\":\\"2023-07-25T13:57:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"SRP: 단일 책임 원칙 (Single Responsibility Principle)","slug":"srp-단일-책임-원칙-single-responsibility-principle","link":"#srp-단일-책임-원칙-single-responsibility-principle","children":[]}],"git":{"createdTime":1689838539000,"updatedTime":1690293437000,"contributors":[{"name":"ChoDragon9","email":"04whdydrn30@gmail.com","commits":2}]},"readingTime":{"minutes":0.08,"words":23},"filePathRelative":"fe-dev/good-code/solid-srp.md","localizedDate":"2023년 7월 20일","excerpt":"<h1> SOLID 원칙 시리즈 - 단일 책임 원칙</h1>\\n<h2> SRP: 단일 책임 원칙 (Single Responsibility Principle)</h2>\\n<p>역사적으로 SRP는 \\"단일 모듈은 변경의 이유가 하나. 오직 하나뿐이어야 한다.\\"로 기술되어 있다.</p>\\n<p><strong>변경의 이유</strong>는 무엇을 의미하는 할까? 소프트웨어 시스템은 사용자와 이해관계자를 만족시키기 위해 변경된다.\\nSRP가 말하는 <strong>변경의 이유</strong>는 바로 이들 사용자와 이해관계자를 가리킨다.</p>\\n<p><strong>단일 모듈</strong>은 무엇을 의미하는 할까? 가장 단순한 정의는 소스파일이다. 대부분의 경우 이 정의는 잘 들어 맞는다. 하지만 일부 언어와 개발 환경에서는 코드를 소스파일에 저장하지 않는다. 이러한 경우 모듈은 단순히 함수와 데이터 구조로 구성된 <strong>응집된</strong> 집합이다.</p>","autoDesc":true}');export{e as data};
