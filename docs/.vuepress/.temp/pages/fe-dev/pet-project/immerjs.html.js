export const data = JSON.parse("{\"key\":\"v-7f83aa4d\",\"path\":\"/fe-dev/pet-project/immerjs.html\",\"title\":\"Immer.js 기능 만들기\",\"lang\":\"ko-KR\",\"frontmatter\":{\"title\":\"Immer.js 기능 만들기\",\"description\":\"Immer.js 기능 만들기 Immer.js Immer.js: Immer (German for: always) is a tiny package that allows you to work with immutable state in a more convenient way. It is based on the copy-on-write mechanism.\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://the-next-web-research-lab.github.io/fe-dev/pet-project/immerjs.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"더넥스트웹리서치랩\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Immer.js 기능 만들기\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Immer.js 기능 만들기 Immer.js Immer.js: Immer (German for: always) is a tiny package that allows you to work with immutable state in a more convenient way. It is based on the copy-on-write mechanism.\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://the-next-web-research-lab.github.io/images/og_image.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"ko-KR\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"Immer.js 기능 만들기\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Immer.js 기능 만들기\\\",\\\"image\\\":[\\\"https://the-next-web-research-lab.github.io/images/og_image.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Immer.js 특징\",\"slug\":\"immer-js-특징\",\"link\":\"#immer-js-특징\",\"children\":[]},{\"level\":2,\"title\":\"Immer.js의 원리\",\"slug\":\"immer-js의-원리\",\"link\":\"#immer-js의-원리\",\"children\":[]},{\"level\":2,\"title\":\"Proxy API 기반 다지기\",\"slug\":\"proxy-api-기반-다지기\",\"link\":\"#proxy-api-기반-다지기\",\"children\":[{\"level\":3,\"title\":\"객체 감시하기\",\"slug\":\"객체-감시하기\",\"link\":\"#객체-감시하기\",\"children\":[]},{\"level\":3,\"title\":\"감시 취소하기\",\"slug\":\"감시-취소하기\",\"link\":\"#감시-취소하기\",\"children\":[]},{\"level\":3,\"title\":\"깊은 객체 감시하기\",\"slug\":\"깊은-객체-감시하기\",\"link\":\"#깊은-객체-감시하기\",\"children\":[]}]},{\"level\":2,\"title\":\"영속 자료 구조 만들기\",\"slug\":\"영속-자료-구조-만들기\",\"link\":\"#영속-자료-구조-만들기\",\"children\":[{\"level\":3,\"title\":\"자료 구조 만들기\",\"slug\":\"자료-구조-만들기\",\"link\":\"#자료-구조-만들기\",\"children\":[]},{\"level\":3,\"title\":\"자료 변경하기\",\"slug\":\"자료-변경하기\",\"link\":\"#자료-변경하기\",\"children\":[]},{\"level\":3,\"title\":\"원본자료 사용하기\",\"slug\":\"원본자료-사용하기\",\"link\":\"#원본자료-사용하기\",\"children\":[]}]},{\"level\":2,\"title\":\"Proxy API와 영속 자료 구조 병합하기\",\"slug\":\"proxy-api와-영속-자료-구조-병합하기\",\"link\":\"#proxy-api와-영속-자료-구조-병합하기\",\"children\":[{\"level\":3,\"title\":\"상태를 자료 구조로 사용\",\"slug\":\"상태를-자료-구조로-사용\",\"link\":\"#상태를-자료-구조로-사용\",\"children\":[]},{\"level\":3,\"title\":\"프리미티브 타입과 배열 타입 사용 가능하도록 수정\",\"slug\":\"프리미티브-타입과-배열-타입-사용-가능하도록-수정\",\"link\":\"#프리미티브-타입과-배열-타입-사용-가능하도록-수정\",\"children\":[]},{\"level\":3,\"title\":\"Array 메소드 사용 가능하도록 수정\",\"slug\":\"array-메소드-사용-가능하도록-수정\",\"link\":\"#array-메소드-사용-가능하도록-수정\",\"children\":[]},{\"level\":3,\"title\":\"ImmerJs 예제로 확인해보기\",\"slug\":\"immerjs-예제로-확인해보기\",\"link\":\"#immerjs-예제로-확인해보기\",\"children\":[]}]},{\"level\":2,\"title\":\"불변성만 필요할 때\",\"slug\":\"불변성만-필요할-때\",\"link\":\"#불변성만-필요할-때\",\"children\":[]}],\"readingTime\":{\"minutes\":4.19,\"words\":1258},\"filePathRelative\":\"fe-dev/pet-project/immerjs.md\",\"excerpt\":\"<h1> Immer.js 기능 만들기</h1>\\n<div class=\\\"hint-container tip\\\">\\n<p class=\\\"hint-container-title\\\">Immer.js</p>\\n<p><a href=\\\"https://immerjs.github.io/immer/docs/introduction\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Immer.js</a>: Immer (German for: always) is a tiny package that allows you to work with immutable state in a more convenient way. It is based on the copy-on-write mechanism.</p>\\n</div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
