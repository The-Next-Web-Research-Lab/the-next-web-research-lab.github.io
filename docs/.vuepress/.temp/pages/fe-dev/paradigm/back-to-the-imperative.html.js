export const data = JSON.parse("{\"key\":\"v-4d1ec4d0\",\"path\":\"/fe-dev/paradigm/back-to-the-imperative.html\",\"title\":\"명령형 프로그래밍 사고로 전환하기\",\"lang\":\"ko-KR\",\"frontmatter\":{\"title\":\"명령형 프로그래밍 사고로 전환하기\",\"description\":\"명령형과 함수형 비교 두 리스트 연결로 비교\\r 순수 함수형 데이터 구조 도서 명령형 명령형 방식에서는 리스트의 첫 셀과 마지막 셀에 대한 포인터를 유지함으로써 O(1)만에 두 리스트를 이어 붙일 수 있다. 첫 번째 리스트의 마지막 셀이 두 번째 리스트의 첫 번째 셀을 가리키도록 변경함으로써 쉽게 구현할 수 있다. 단...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://the-next-web-research-lab.github.io/fe-dev/paradigm/back-to-the-imperative.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"더넥스트웹리서치랩\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"명령형 프로그래밍 사고로 전환하기\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"명령형과 함수형 비교 두 리스트 연결로 비교\\r 순수 함수형 데이터 구조 도서 명령형 명령형 방식에서는 리스트의 첫 셀과 마지막 셀에 대한 포인터를 유지함으로써 O(1)만에 두 리스트를 이어 붙일 수 있다. 첫 번째 리스트의 마지막 셀이 두 번째 리스트의 첫 번째 셀을 가리키도록 변경함으로써 쉽게 구현할 수 있다. 단...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://the-next-web-research-lab.github.io/images/logo.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"ko-KR\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-06-21T12:14:30.000Z\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"명령형 프로그래밍 사고로 전환하기\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-06-21T12:14:30.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"명령형 프로그래밍 사고로 전환하기\\\",\\\"image\\\":[\\\"https://the-next-web-research-lab.github.io/images/logo.png\\\"],\\\"dateModified\\\":\\\"2023-06-21T12:14:30.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"명령형과 함수형 비교\",\"slug\":\"명령형과-함수형-비교\",\"link\":\"#명령형과-함수형-비교\",\"children\":[{\"level\":3,\"title\":\"두 리스트 연결로 비교\",\"slug\":\"두-리스트-연결로-비교\",\"link\":\"#두-리스트-연결로-비교\",\"children\":[]},{\"level\":3,\"title\":\"에러 처리 비교\",\"slug\":\"에러-처리-비교\",\"link\":\"#에러-처리-비교\",\"children\":[]},{\"level\":3,\"title\":\"반복 처리 비교\",\"slug\":\"반복-처리-비교\",\"link\":\"#반복-처리-비교\",\"children\":[]}]},{\"level\":2,\"title\":\"명령형/객체지향/함수형 패러다임 구분하기\",\"slug\":\"명령형-객체지향-함수형-패러다임-구분하기\",\"link\":\"#명령형-객체지향-함수형-패러다임-구분하기\",\"children\":[{\"level\":3,\"title\":\"명령형\",\"slug\":\"명령형-6\",\"link\":\"#명령형-6\",\"children\":[]},{\"level\":3,\"title\":\"객체지향\",\"slug\":\"객체지향\",\"link\":\"#객체지향\",\"children\":[]},{\"level\":3,\"title\":\"함수형\",\"slug\":\"함수형-6\",\"link\":\"#함수형-6\",\"children\":[]}]},{\"level\":2,\"title\":\"끝\",\"slug\":\"끝\",\"link\":\"#끝\",\"children\":[]}],\"git\":{\"updatedTime\":1687349670000},\"filePathRelative\":\"fe-dev/paradigm/back-to-the-imperative.md\",\"autoDesc\":true}")
