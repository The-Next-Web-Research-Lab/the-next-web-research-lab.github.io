export const data = JSON.parse("{\"key\":\"v-7fcfd1c4\",\"path\":\"/fe-dev/design-patterns/flux.html\",\"title\":\"Flux\",\"lang\":\"ko-KR\",\"frontmatter\":{\"title\":\"Flux\",\"description\":\"Flux 소개 Flux는 클라이언트 사이드 어플리케이션 아키텍쳐이다. Flux는 대형 MVC 어플리케이션에서 나타나는 데이터 간의 의존성과 연쇄적인 갱신에서 발생되는 예측하기 힘든 데이터 흐름을 올바르게 다루기 위해 만들어 졌다. 양방향 데이터 바인딩은 연속적인 갱신이 발생하고 객체 하나의 변경이 다른 객체를 변경하게 되어 실제 필요한 업데이트보다 더 많은 분량을 실행하게 된다. 어플리케이션의 규모가 커지면 데이터의 연속적인 갱신이 되는 상황에서는 사용자 상호작용의 결과가 어떤 변화를 만드는지 예측하는데 어려워진다. 갱신으로 인한 데이터 변경이 한 차례만 이뤄진다면 전체 어플리케이션은 좀 더 예측하기 쉽게 된다.\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://the-next-web-research-lab.github.io/fe-dev/design-patterns/flux.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"더넥스트웹리서치랩\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Flux\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Flux 소개 Flux는 클라이언트 사이드 어플리케이션 아키텍쳐이다. Flux는 대형 MVC 어플리케이션에서 나타나는 데이터 간의 의존성과 연쇄적인 갱신에서 발생되는 예측하기 힘든 데이터 흐름을 올바르게 다루기 위해 만들어 졌다. 양방향 데이터 바인딩은 연속적인 갱신이 발생하고 객체 하나의 변경이 다른 객체를 변경하게 되어 실제 필요한 업데이트보다 더 많은 분량을 실행하게 된다. 어플리케이션의 규모가 커지면 데이터의 연속적인 갱신이 되는 상황에서는 사용자 상호작용의 결과가 어떤 변화를 만드는지 예측하는데 어려워진다. 갱신으로 인한 데이터 변경이 한 차례만 이뤄진다면 전체 어플리케이션은 좀 더 예측하기 쉽게 된다.\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://the-next-web-research-lab.github.io/images/og_image.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"ko-KR\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-06-21T12:25:39.000Z\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"Flux\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-06-21T12:25:39.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Flux\\\",\\\"image\\\":[\\\"https://the-next-web-research-lab.github.io/images/og_image.png\\\"],\\\"dateModified\\\":\\\"2023-06-21T12:25:39.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"소개\",\"slug\":\"소개\",\"link\":\"#소개\",\"children\":[]},{\"level\":2,\"title\":\"Dispatcher\",\"slug\":\"dispatcher\",\"link\":\"#dispatcher\",\"children\":[]},{\"level\":2,\"title\":\"Stores\",\"slug\":\"stores\",\"link\":\"#stores\",\"children\":[]},{\"level\":2,\"title\":\"Views\",\"slug\":\"views\",\"link\":\"#views\",\"children\":[]},{\"level\":2,\"title\":\"Actions\",\"slug\":\"actions\",\"link\":\"#actions\",\"children\":[]},{\"level\":2,\"title\":\"참고\",\"slug\":\"참고\",\"link\":\"#참고\",\"children\":[]}],\"git\":{\"createdTime\":1687350339000,\"updatedTime\":1687350339000,\"contributors\":[{\"name\":\"ChoDragon9\",\"email\":\"04whdydrn30@gmail.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":0.38,\"words\":115},\"filePathRelative\":\"fe-dev/design-patterns/flux.md\",\"localizedDate\":\"2023년 6월 21일\",\"excerpt\":\"<h1> Flux</h1>\\n<h2> 소개</h2>\\n<p>Flux는 클라이언트 사이드 어플리케이션 아키텍쳐이다. Flux는 대형 MVC 어플리케이션에서 나타나는 데이터 간의 의존성과 연쇄적인 갱신에서 발생되는 예측하기 힘든 데이터 흐름을 올바르게 다루기 위해 만들어 졌다.</p>\\n<p>양방향 데이터 바인딩은 연속적인 갱신이 발생하고 객체 하나의 변경이 다른 객체를 변경하게 되어 실제 필요한 업데이트보다 더 많은 분량을 실행하게 된다. 어플리케이션의 규모가 커지면 데이터의 연속적인 갱신이 되는 상황에서는 사용자 상호작용의 결과가 어떤 변화를 만드는지 예측하는데 어려워진다. 갱신으로 인한 데이터 변경이 한 차례만 이뤄진다면 전체 어플리케이션은 좀 더 예측하기 쉽게 된다.</p>\",\"autoDesc\":true}")
